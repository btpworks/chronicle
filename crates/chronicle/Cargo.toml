[package]
edition = "2021"
name    = "chronicle"
version = "0.6.0"


# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
Inflector.workspace            = true
api                            = { path = "../api" }
async-graphql.workspace        = true
chrono                         = { workspace = true, features = ["serde"] }
clap                           = { workspace = true, features = ["derive", "env"] }
clap_complete.workspace        = true
colored_json.workspace         = true
common                         = { path = "../common" }
diesel.workspace               = true
dotenvy.workspace              = true
futures.workspace              = true
genco.workspace                = true
hex.workspace                  = true
iref.workspace                 = true
jsonschema.workspace           = true
opa.workspace                  = true
opentelemetry.workspace        = true
opentelemetry-jaeger.workspace = true
percent-encoding.workspace     = true
proto                          = { path = "../sawtooth-protocol" }
question.workspace             = true
rand.workspace                 = true
rand_core.workspace            = true
serde.workspace                = true
serde_derive.workspace         = true
serde_json.workspace           = true
serde_yaml.workspace           = true
shellexpand.workspace          = true
chronicle-telemetry            = { path = "../chronicle-telemetry" }
thiserror.workspace            = true
tokio.workspace                = true
toml.workspace                 = true
tracing.workspace              = true
tracing-log.workspace          = true
url                            = { workspace = true, features = ["serde"] }
user-error.workspace           = true
uuid.workspace                 = true
valico.workspace               = true


[features]
devmode = ["inmem"]
# Use an in-memory stub ledger
inmem   = []
strict  = []

[build-dependencies]

[dev-dependencies]
assert_fs.workspace = true
insta               = { workspace = true, features = ["yaml"] }
tempfile.workspace  = true
